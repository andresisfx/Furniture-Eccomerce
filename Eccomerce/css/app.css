html {
    box-sizing: border-box; /** Permite que el ancho y alto de los elementos se calculen incluyendo el padding y el borde ejm: width:300; padding:25 lo que hará es restarle 25px padding al total del width interior para que en total sean 300px */
    /*!ESTO ES SOLO PARA RECORDAR, YA QQUE TODO ESTO YA ESTÁ INCLUUIDO EN EL NORMALIZE.CSS*/
    font-size: 62.5%; /** Establece el tamaño de fuente base en 62.5% del tamaño de fuente por defecto del navegador, lo que facilita el cálculo de unidades rem (1rem = 10px) */
    /** Esto es útil para que 1rem sea igual a 10px, facilitando el uso de unidades rem en lugar de px */
}
*,*:before*,*:after {
    box-sizing: inherit; /** Permite que todos los elementos hereden el box-sizing del html, lo que significa que todos los elementos tendrán el mismo comportamiento de cálculo de ancho y alto */
    margin: 0; /** Elimina el margen por defecto de todos los elementos */
    padding: 0; /** Elimina el padding por defecto de todos los elementos */
}

/*TODO:  estilos globales*/
a {
    text-decoration: none; /** Elimina el subrayado de los enlaces */
    color: #000; /** Establece el color del texto de los enlaces */
}
img {
    max-width: 100%; /** Asegura que las imágenes no excedan el ancho de su contenedor */
    display:block; /** Hace que las imágenes se comporten como bloques, ocupando todo el ancho disponible y elimina espacios entre bloques */
    
}
body{
    font-family: "Raleway", sans-serif; 
    font-size: 1.6rem; /** Establece el tamaño de fuente base en 16px (1.6rem) */
    line-height: 1.5; /** Establece la altura de línea en 1.5 veces el tamaño de fuente, mejorando la legibilidad */
}
h1,h2,h3{
    font-family: "Playfair Display", serif; /** Establece la fuente Playfair Display para los encabezados h1 */
}
h1{
    font-size: 3rem; /** Establece el tamaño de fuente del encabezado h1 Mobile-First */
    margin: 0 0 2rem 0; /** Añade un margen inferior de 20px */
}

@media (min-width: 786px){
    h1 {
        font-size: 4rem;
    }
}
h2{
    font-size: 2.3rem; /** Establece el tamaño de fuente del encabezado h2 */
}
@media (min-width:786px){
    h2{
    font-size: 3rem; /** Establece el tamaño de fuente del encabezado h2 */
    }
}
h3{
    font-size: 1.5rem;
}
@media (min-width: 786px) {
    h3{
    font-size: 2rem;

    }
}

.contenedor{
    max-width: 120rem; /** Establece un ancho máximo de 1200px */
    margin: 0 auto; /** Centra el contenedor horizontalmente */
    padding: 2rem; /** Añade un padding de 20px alrededor del contenedor */
}
.btn{
     background-color: #8cbc00; /** Establece el color de fondo del enlace */
    color: #fff; /** Establece el color del texto del enlace en blanco */
    padding: 1rem; /** Añade un padding de 10px alrededor del enlace */
    display: block; /** Hace que el enlace se comporte como un bloque en línea, permitiendo establecer dimensiones y márgenes */
    font-weight: 900;
    text-align: center; /** Centra el texto dentro del enlace */
    border: none;
    transition:background-color .3s ease; /** Añade una transición suave al color de fondo del enlace */
}
.btn:hover{
    cursor: pointer; /** Cambia el cursor a una mano al pasar el cursor sobre el enlace */
    background-color: #5a7801; /** Cambia el color de fondo al pasar el cursor */
}
/*todo : Utilidades */
.text-center {
    text-align: center; /** Centra el texto dentro del elemento */
}
.max-width {
    max-width: 30rem; /** Establece un ancho máximo de 1200px */
    /** Centra el elemento horizontalmente */
}

/*TODO:  estilos de navegación*/
/**contenedor principal barra de navegación*/

    .nombre-sitio{
        
        margin-bottom: 1rem;
        text-align: center;
        
    
    }
    .nav-contenedor {
         border-top:none; /** Añade un borde superior de 1px de color gris claro */
        
    }
    .nav-principal {
        max-width: 100vw; /** Establece un ancho máximo de 1200px */
        margin:0 ; /** Centra el elemento horizontalmente */
        padding:0 ; 
        display: flex;
        opacity: 0;
        flex-direction: column;
        height: 0;
        justify-content: space-around;
        transition:height 0.4s, transform 0.4s;
        transform: translateY(-100%);
    }
   .menu-active{
    display: flex;
    transform: translateY(0);
    opacity: 1;
    height: 70vh;
    padding:1rem;
    
   }

@media (min-width:786px){
    .nav-contenedor {
         border-top: 0.1rem  solid #ccc; /** Añade un borde superior de 1px de color gris claro */
    }
    .nav-principal {
        max-width: 120rem; /** Establece un ancho máximo de 1200px */
        margin:0 auto 0 auto; /** Centra el elemento horizontalmente */
        padding:2rem 0; 
        display: flex;
        flex-direction: row;
        height: auto;
        transform: translateY(0);
        color: #000;
        justify-content: space-evenly;
        opacity: 1;
        
    }
    .nombre-sitio{
        
        margin-bottom: 5rem;
        text-align: center;
        
    
    }
}




.nombre-sitio span {
    color: #037bc0;
    font-weight: bold;
    
}
.title-hamburger-cont{
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-left: 1rem;
}

.hamburger{

    display: block;
}
.hamburger span{
    display: block;
    margin: 5px;
    background-color: #000000;
    height: 5px;
    width: 25px;
   
}
@media (min-width: 786px) {
    .hamburger{
        display: none;
    }
    .title-hamburger-cont{
    display: column;
    align-items: center;
    justify-content: center;
}

}
/*!ESPECIFICIDAD EN CSS*/
/** En CSS, los estilos con mayor especificidad tienen más prioridad. El orden va así: primero los estilos en línea (style=""), luego los selectores de ID (#id), después las clases, atributos y pseudoclases (.clase, [type], :hover), y por último los elementos (div, h1, etc.) y pseudoelementos (::before). Si hay conflicto, gana el que tenga mayor especificidad. Si están empatados, se aplica el que esté más abajo en el archivo CSS.  style id   class   etiqueta
        0    0     0         0
        .claseEjempplo div{}  = 0011 porque tiene una clase y una etiqueta  
*/

.enlace{
    text-transform: uppercase;
    font-weight: bold;
    text-decoration: none;
    color: #000000;
}
/*esta clase se aplica a las etiquetas que tienen la clase navegacion y color-rojo*/



/*!DISPLAY*/
/**diplay inline-block permite que el elemento se comporte como un bloque pero se alinee en línea con otros elementos, permitiendo establecer dimensiones y márgenes. Es útil para elementos que necesitan ser tratados como bloques pero también alineados horizontalmente, como botones o imágenes dentro de un texto.*/ 
/** diplay inline permite que el elemento se alinee en línea con otros elementos, pero no permite establecer dimensiones ni márgenes. Es útil para elementos que deben fluir dentro del texto, como enlaces o etiquetas.*/
/** diplay block permite que el elemento ocupe todo el ancho disponible y comience en una nueva línea. Es útil para elementos que deben ser tratados como bloques independientes, como párrafos o encabezados.*/
/** nav tiene display inline por defecto, lo que significa que se alinea en línea con otros elementos y no ocupa todo el ancho disponible*/
/**la etiqueta p tiene display block por defecto, lo que significa que ocupa todo el ancho disponible y comienza en una nueva línea*/


/*TODO:background image*/
.hero{
    background-image: url("../Imagenes-Ecommerce/principal.jpg");
    height: 55rem;
    background-repeat: no-repeat; /** Evita que la imagen de fondo se repita */
    background-size: cover; /** Asegura que la imagen cubra todo el contenedor */
    background-position: center center; /** Centra la imagen de fondo, también podemos situal arriba con top, abajo con : bottom, a la derecha   */
}


/*!FLEXBOX*/
/**JUSTIFY-CONTENT row : alinea los elementos horizontalmente*/
/**JUSTIFY-CONTENT column: alinea los elementos verticalmente */
/**ALIGN-ITEMS row: alinea los elementos verticalmente */
/**ALIGN-ITEMS column: alinea los elementos horizontalmente */

/*!GRID*/
/**grid-template-columns: repeat(3, 1fr); crea 3 columnas de igual tamaño en un contenedor grid*/
/**grid-template-rows: repeat(2, 1fr); crea 2 filas de igual tamaño en un contenedor grid*/
/**grid-gap: 20px; establece un espacio de 20px entre las filas y columnas de un contenedor grid*/

/**grid-template-areas: "header header header" "main main sidebar" "footer footer footer"; define un diseño de cuadrícula con áreas nombradas, donde cada área puede ocupar varias celdas y se puede referenciar por su nombre en los elementos hijos. Esto permite una disposición más semántica y fácil de entender del diseño de la cuadrícula.*/
/**grid-template: "header header header" "main main sidebar" "footer footer footer"; define un diseño de cuadrícula con áreas nombradas, donde cada área puede ocupar varias celdas y se puede referenciar por su nombre en los elementos hijos. Esto permite una disposición más semántica y fácil de entender del diseño de la cuadrícula.*/
/**Grid-lines: Las líneas de la cuadrícula son las líneas que dividen el contenedor grid en filas y columnas. Se pueden referenciar por su número o nombre para posicionar elementos dentro del grid. Por ejemplo, grid-column: 1 / 3; posiciona un elemento desde la línea de columna 1 hasta la línea de columna 3, abarcando dos columnas.*/
/**Grid track: Una pista de cuadrícula es una fila o columna dentro del contenedor grid. Se define mediante grid-template-rows o grid-template-columns, y puede tener un tamaño fijo, flexible o automático. Por ejemplo, grid-template-columns: 100px auto; crea una columna de 100px y otra que se ajuste al contenido restante.*/
/**Grid cell: Una celda de cuadrícula es la intersección de una fila y una columna dentro del contenedor grid. Cada celda puede contener un elemento y se puede posicionar utilizando grid-row y grid-column. Por ejemplo, grid-row: 1 / 2; posiciona un elemento en la primera fila de la cuadrícula.*/
/**grid-area: header; asigna el área de la cuadrícula al elemento, permitiendo que se posicione en una ubicación específica dentro del grid*/
.categorias h2{
  text-align: center; /** Centra el texto del encabezado */
  margin-bottom: 2rem; /** Añade un margen inferior de 20px */
  padding-top: 5rem;
}
.categoria a{
 text-align: center; 
 display: block; /** Agregamos esto ya que la etiqueta <a/> por defecto tiene display inline y no deja desplazarla a los lados  */
 padding: 1rem;
}
.categoria a:hover{
    background-color: #037bc0; /** Cambia el color de fondo al pasar el cursor */
    color: #fff; /** Cambia el color del texto al pasar el cursor */
    padding: 1rem; /** Añade un padding de 10px al pasar el cursor */
    border-bottom-right-radius: 1rem; /** Añade un radio de 10px al borde inferior derecho */
}
.listado-categorias{
    display: grid; /** Utiliza grid para organizar los elementos */
    grid-template-columns: repeat(3, 2fr); /** Crea 3 columnas de igual tamaño */
    gap: 2rem; /** Establece un espacio de 20px entre las columnas;  existe column-gap y row-gap pero gap aplica para las dos  */
    margin-top: 5rem; /** Añade un margen superior de 50px */
}

/*TODO:  sección  "sobre nosotros  */

.sobre-nosotros{
    background-image: linear-gradient(to right,transparent 50% , rgb(216, 215, 215) 50%, #037bc0 50%),url(/Imagenes-Ecommerce/nosotros.jpg); 
    background-repeat: no-repeat; /** Evita que la imagen de fondo se repita */
    padding: 10rem 0;/** Añade un padding de 100px en la parte superior e inferior y así la imagen se ve  más alta lo mismo que el gradiente*/
    background-position: left center; /** Centra la imagen de fondo a la izquierda */
    background-size: 100%,120rem; /** aquí coloca 100% al linear gradiente que está de primero y luego le da los 120 rem a la url que se encuentra después */
}

.sobre-nosotros-grid{
    display: grid; /** Utiliza grid para organizar los elementos */
    grid-template-columns: repeat(2, 1fr); /** Crea 2 columnas de igual tamaño */

    column-gap: 4rem;  /**Establece un espacio de 40px entre las columnas , pero el mismo efecto se logra en la siguiente clase donde le añadimos un pading de 2 rem, pero en css grid se suelen utilizar gaps y no padding */
}

/*Todo:  texto sobre nosotros con display-grid */
/* .texto-sobre-nosotros{
    grid-column: 2 / 3; /** Coloca el texto en la segunda columna */

   /** color: #fff;  Establece el color del texto en blanco 
} */


/*todo: sobre nosotros con flexbox */
.sobre-nosotros-grid {
 display:flex;
 justify-content: flex-end; /** Alinea los elementos al final del contenedor */
}
.contenedor-texto{
     flex-basis: 46%; /** Establece el ancho del contenedor de texto al 46% del contenedor principal , esto con el fin de que el texto se vea más a la derecha */

     padding-left: 10rem; /** Añade un padding de 100px a la izquierda para separar el texto de la imagen */
     color: #fff;
    
}

/*!CUANDO UTILIZAMOS FLEXBOX Y GRID ??*/
/*? Cuando utilizamos flexbox, es ideal para alinear elementos en una sola dimensión (horizontal o vertical), mientras que grid es más adecuado para diseños bidimensionales, permitiendo organizar elementos en filas y columnas. Por ejemplo, si queremos alinear un menú de navegación horizontalmente, usaríamos flexbox, pero si queremos crear un diseño de cuadrícula con imágenes y descripciones, usaríamos grid.*/


/*todo listado de productos */

.contenido-principal{
    padding-top: 5rem;
}

.listado-productos{
    display: grid; 
    grid-template-columns: repeat(6, 1fr); /** Crea 6 columnas de igual tamaño */
    /**column-gap: 2rem;  Establece un espacio de 20px entre las columnas */
   /** row-gap: 2rem;  Establece un espacio de 20px entre las filas */
   gap: 2rem; /** Establece un espacio de 20px entre las filas y columnas, osea remplaza las dos lineas anteriores */

 
}
.producto:nth-child(1){
 /*? grid-column: 1/7;  Hace que el primer producto ocupe las 6 columnas */
 grid-column-start: 1; /** Establece el inicio de la columna en la primera columna */
 grid-column-end: 7; /** Establece el final de la columna en la séptima columna, lo que hace que ocupe las 6 columnas */
 display: grid;
 grid-template-columns: 3fr 1fr;/** Crea 2 columnas de igual tamaño dentro del primer producto */

}
.producto:nth-child(1)img{
    height: 43rem;
    width: 100%; /** Asegura que la imagen ocupe todo el ancho del contenedor */
    object-fit: cover; /** Asegura que la imagen cubra todo el contenedor sin distorsionarse */
}
.producto:nth-child(2){
    grid-column-start: 1; /** Establece el inicio de la columna en la primera columna */
    grid-column-end: 4; /** Establece el final de la columna en la cuarta columna, lo que hace que ocupe las 3 primeras columnas */
}
.producto:nth-child(2)img{
    height: 30rem;
    width: 100%; /** Asegura que la imagen ocupe todo el ancho del contenedor */
    object-fit: cover; /** Asegura que la imagen cubra todo el contenedor sin distorsionarse */
}
.producto:nth-child(3){ 
    grid-column-start: 4; 
    grid-column-end: 7; 
}
.producto:nth-child(3)img{
    height: 30rem;
    width: 100%; /** Asegura que la imagen ocupe todo el ancho del contenedor */
    object-fit: cover; /** Asegura que la imagen cubra todo el contenedor sin distorsionarse */
}
.producto:nth-child(4){
    grid-column-start: 1; 
    grid-column-end: 3;
}
.producto:nth-child(4)img{
    height: 43rem;
    width: 100%; /** Asegura que la imagen ocupe todo el ancho del contenedor */
    object-fit: cover; /** Asegura que la imagen cubra todo el contenedor sin distorsionarse */
}
.producto:nth-child(5){
    grid-column-start: 3; 
    grid-column-end: 5;
}
.producto:nth-child(6){
    grid-column-start: 5; 
    grid-column-end: 7;
}

.producto{
    background-color: #037bc0; /** Establece el color de fondo del producto */
}
.texto-producto{
    padding: 2rem; /** Añade un padding de 20px alrededor del texto del producto */
    color: #fff; /** Establece el color del texto en blanco */
    text-align: center; /** Centra el texto dentro del elemento */
}
.texto-producto .precio{
    font-size: 2rem; /** Establece el tamaño de fuente del precio */
    font-weight: 900; /** Hace que el precio sea negrita */
    margin-bottom: 1rem; /** Añade un margen inferior de 10px */

}
.texto-producto h3{
    margin: 0; /** Elimina el margen por defecto del encabezado */
}
.texto-producto p{
    margin: 0 0 0.5rem 0;
}

/*TODO:  footer */
.site-footer{
    border-top: 1px solid #e1e1e1; /** Añade un borde superior de 1px de color gris claro */
   margin-top: 2rem;
    padding-top: 2rem; /** Añade un padding de 20px alrededor del footer */
}
.grid-footer{
    display: flex;
}
.grid-footer div{
    flex: 1; /**Factor de crecimiento: Hace que cada div dentro del footer ocupe el mismo espacio */
    padding: 1rem; /** Añade un padding de 10px alrededor de cada div */
}
.site-footer h3{
    
    margin-bottom: .5rem; /** Añade un margen inferior de 10px */
}
/*!alternativa con grid */
.grid-footer{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem; /** Establece un espacio de 20px entre las columnas */
}
.footer-menu a{
    display: block; /** Hace que el menú del footer se comporte como un bloque en línea, permitiendo establecer dimensiones y márgenes */
}
.copy-right{
    text-align: center; /** Centra el texto dentro del elemento */
    margin-top: 5rem; /** Añade un margen superior de 20px */
    font-size: 1.4rem; /** Establece el tamaño de fuente del texto de derechos de autor */
    color: #666; /** Establece el color del texto en gris claro */
}




/*!PAGINA  NOSOTROS*/

/*TODO : Contenido nosotros */
.contenido-nosotros{
    display: grid; /** Utiliza grid para organizar los elementos */
    grid-template-columns: repeat(2, 1fr); /** Crea 2 columnas de igual tamaño */
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /** Crea columnas que se ajustan automáticamente al tamaño del contenedor, con un ancho mínimo de 300px y un ancho máximo de 1fr (una fracción del espacio disponible) */
    gap: 2rem; /** Establece un espacio de 20px entre las columnas */
    margin-top: 5rem; /** Añade un margen superior de 50px */
}

.informacion-nosotros{
    display: flex; /** Utiliza flexbox para organizar los elementos */
    flex-direction: column; /** Organiza los elementos en una columna */
    justify-content: center; /** Centra los elementos verticalmente */
    align-items: center; /** Centra los elementos horizontalmente */
    padding: 2rem; /** Añade un padding de 20px alrededor del contenedor */
}


/*!PAGINA BLOG*/
/*todo: CONTENEDOR BLOG*/
.contenedor-blog{
    display: grid; /** Utiliza grid para organizar los elementos */
    grid-template-columns: repeat(2, 1fr); /** Crea 3 columnas de igual tamaño */
    gap: 2rem; /** Establece un espacio de 20px entre las columnas */
    margin-top: 5rem; /** Añade un margen superior de 50px */
}
.entrada{
    border-bottom: 1px solid #ccc; /** Añade un borde inferior de 1px de color gris claro */
    padding-bottom: 2rem; /** Añade un padding de 20px en la parte inferior */
    margin-bottom: 2rem; /** Añade un margen inferior de 20px */
}
.entrada:last-of-type{
    border-bottom: none; /** Elimina el borde inferior del último elemento */
}
.entrada-meta{
    display: flex; /** Utiliza flexbox para organizar los elementos */
    justify-content: space-between; /** Distribuye el espacio entre los elementos */
    align-items: center; /** Centra los elementos verticalmente */
    margin-bottom: 1rem; /** Añade un margen inferior de 10px */
}
.entrada-meta p{
  font-weight: bold;
}
.entrada-meta span{
   color: #037bc0;
}
.contenido-entrada-blog{
    width: 60rem;
    margin: auto; /** Centra el contenido horizontalmente */
}

/*!PAGINA GALERIA*/
.galeria{
    list-style: none; /** Elimina los puntos de la lista */
    margin: 0;
    padding: 0; /** Elimina el padding por defecto de la lista */
    display: grid; /** Utiliza grid para organizar los elementos */
    grid-template-columns: repeat(3, 1fr); /** Crea 3 columnas de igual tamaño */
    gap: 2rem; /** Establece un espacio de 20px entre las columnas */

   
}
.galeria img{
   width: 40rem;
    height: 40rem; /** Establece una altura de 400px para las imágenes */
    object-fit: cover; /** Asegura que la imagen cubra todo el contenedor sin distorsionarse */
}

/*!PAGINA CONTACTO*/
/*TODO: formulario de contacto */
.formulario{
    max-width: 60rem;
    margin: 0 auto; /** Centra el formulario horizontalmente */
}

.formulario fieldset{
    border: 1px solid #ccc; /** Añade un borde de 1px de color gris claro */
    padding: 2rem; /** Añade un padding de 20px alrededor del fieldset */
    margin-bottom: 2rem; /** Añade un margen inferior de 20px */
}
.formulario legend{
    font-size: 2rem; /** Establece el tamaño de fuente del legend */
    background-color: #037bc0;
    width: 100%; /** Hace que el legend ocupe todo el ancho del fieldset */
    text-transform: uppercase; /** Convierte el texto a mayúsculas */
    border-radius: 0.5rem; /** Añade un radio de 5px a las esquinas del legend */
    font-weight: 900; /** Hace que el texto del legend sea negrita */
    text-align: center; /** Centra el texto dentro del legend */
    padding: 1rem; /** Añade un padding de 10px alrededor del legend */
    color: #fff; /** Establece el color del texto en blanco */
    margin-bottom: 1rem; /** Añade un margen inferior de 10px */
}

.campo{
    margin-bottom: 1.5rem; /** Añade un margen inferior de 15px */

    display: flex; /** Utiliza flexbox para organizar los elementos */
}
.campo label{
    flex-basis: 10rem; /** Establece el ancho del label al 100% del contenedor */
   
    font-weight: bold; /** Hace que el texto del label sea negrita */
}
.campo input:not([type="radio"]), .campo textarea{
    flex: 1; /** Hace que el input ocupe todo el espacio disponible */
    padding: 1rem; /** Añade un padding de 10px alrededor del input */
    border-radius: 0.5rem; /** Añade un radio de 5px a las esquinas del input */
    border: 1px solid #ccc; /** Añade un borde de 1px de color gris claro */
}